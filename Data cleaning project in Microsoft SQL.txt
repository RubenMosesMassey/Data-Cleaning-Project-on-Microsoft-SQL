SELECT * FROM real_estate;



--STANDARDIZING DATE FORMAT

UPDATE real_estate SET SaleDate = CONVERT(date,SaleDate)
ALTER TABLE real_estate Alter column SaleDate date;



--POPULATING THE ADDRESS BY SELF JOIN

SELECT * from real_estate
where PropertyAddress is null;

SELECT a.ParcelID, a.PropertyAddress, b.ParcelID, b.PropertyAddress, ISNULL(a.PropertyAddress,b.PropertyAddress) as sum
FROM real_estate AS a
JOIN real_estate AS b ON a.ParcelID = b.ParcelID AND a.[UniqueID ]<>b.[UniqueID ]
WHERE a.PropertyAddress is null;

UPDATE a SET PropertyAddress = ISNULL(a.PropertyAddress,b.PropertyAddress)
FROM real_estate AS a
JOIN real_estate AS b
ON a.ParcelID = b.ParcelID AND a.[UniqueID ]<>b.[UniqueID ]
WHERE a.PropertyAddress is null;

SELECT propertyAddress from real_estate

--BREAKING OUT THE ADDRESS INTO INDIVIDUAL COLUMN 

--checking will the Query work
SELECT SUBSTRING(PropertyAddress,1,CHARINDEX(',', PropertyAddress)-1),
SUBSTRING(PropertyAddress,CHARINDEX(',', PropertyAddress)+1,LEN(PropertyAddress)) AS Address from real_estate

--As the query works the columns and data is added
ALTER TABLE real_estate ADD localadd NVARCHAR(255);
UPDATE real_estate SET localadd = SUBSTRING(PropertyAddress,1,CHARINDEX(',', PropertyAddress)-1);

ALTER TABLE real_estate ADD cityadd NVARCHAR(255);
UPDATE real_estate SET cityadd = SUBSTRING(PropertyAddress,CHARINDEX(',', PropertyAddress)+1,LEN(PropertyAddress))

--Splitting owners address

SELECT 
PARSENAME(REPLACE(OwnerAddress,',', '.'),3),
PARSENAME(REPLACE(OwnerAddress,',', '.'),2),
PARSENAME(REPLACE(OwnerAddress,',', '.'),1) 
FROM real_estate 

ALTER TABLE real_estate ADD ownerlocal NVARCHAR(255);
UPDATE real_estate SET ownerlocal = PARSENAME(REPLACE(OwnerAddress,',', '.'),3)

ALTER TABLE real_estate ADD ownercity NVARCHAR(255);
UPDATE real_estate SET ownercity = PARSENAME(REPLACE(OwnerAddress,',', '.'),2)

ALTER TABLE real_estate ADD ownerstate NVARCHAR(255);
UPDATE real_estate SET ownerstate = PARSENAME(REPLACE(OwnerAddress,',', '.'),1)




--Changing the yes and no

SELECT DISTINCT(SoldAsVacant) FROM real_estate;

SELECT SoldAsVacant,
CASE WHEN SoldAsVacant ='Y' THEN 'YES'
	 WHEN SoldAsVacant = 'N' THEN 'NO'
	 ELSE SoldAsVacant END
FROM real_estate

UPDATE real_estate SET
SoldAsVacant = CASE WHEN SoldAsVacant ='Y' THEN 'YES' WHEN SoldAsVacant = 'N' THEN 'NO'
	 ELSE SoldAsVacant END
FROM real_estate;




--REMOVING DUPLICATES WIITH CTE

WITH RowNumCTE AS(
Select *,
	ROW_NUMBER() OVER (
	PARTITION BY ParcelID,
				 PropertyAddress,
				 SalePrice,
				 SaleDate,
				 LegalReference
				 ORDER BY
					UniqueID
					) row_num

From real_estate
--order by ParcelID
)
DELETE
From RowNumCTE
Where row_num > 1
--Order by PropertyAddress

Select *
From real_estate



--DELETING UNUSED COLUMN
ALTER TABLE real_estate
DROP COLUMN OwnerAddress, TaxDistrict, PropertyAddress, SaleDate
